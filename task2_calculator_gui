import tkinter as tk
from tkinter import messagebox
import math


expression = ""

def press(num):
    global expression
    if num == "×":
        expression += "*"
    elif num == "÷":
        expression += "/"
    elif num == "^":
        expression += "**"
    else:
        expression += str(num)
    equation.set(expression)

def clear():
    global expression
    expression = ""
    equation.set("0")

def equalpress():
    try:
        global expression
        result = str(eval(expression))
        equation.set(result)
        expression = result
    except ZeroDivisionError:
        messagebox.showerror("Error", "Division by zero not allowed!")
        expression = ""
        equation.set("0")
    except:
        messagebox.showerror("Error", "Invalid Input")
        expression = ""
        equation.set("0")

def toggle_sign():
    global expression
    try:
        if expression:
            value = str(-1 * float(expression))
            equation.set(value)
            expression = value
    except:
        pass

# Main Window
root = tk.Tk()
root.title("iOS Calculator Clone")
root.geometry("400x600")
root.config(bg="black")

equation = tk.StringVar()
equation.set("0")

# Display
entry_field = tk.Entry(root, textvariable=equation, font=("Arial", 36, "bold"),
                       bg="black", fg="white", bd=0, relief="flat", justify="right")
entry_field.grid(row=0, column=0, columnspan=4, ipadx=8, ipady=20, pady=20, padx=10, sticky="nsew")

# Fonts
btn_font = ("Arial", 20, "bold")
num_font = ("Arial", 22, "bold")   # Numbers stand out more

def create_btn(text, row, col, cmd=None, bg="#505050", fg="white", colspan=1, font=btn_font):
    action = cmd if cmd else (lambda t=text: press(t))
    tk.Button(root, text=text, command=action,
              font=font, bg=bg, fg=fg,
              activebackground=bg, activeforeground=fg,
              width=5*colspan, height=2, relief="flat", bd=0)\
              .grid(row=row, column=col, columnspan=colspan, padx=3, pady=3, sticky="nsew")

# Buttons Layout
create_btn("AC", 1, 0, cmd=clear, bg="#A6A6A6", fg="black")
create_btn("+/-", 1, 1, cmd=toggle_sign, bg="#A6A6A6", fg="black")
create_btn("%", 1, 2, bg="#A6A6A6", fg="black")
create_btn("÷", 1, 3, bg="#FF9500")

create_btn("7", 2, 0, font=num_font)
create_btn("8", 2, 1, font=num_font)
create_btn("9", 2, 2, font=num_font)
create_btn("×", 2, 3, bg="#FF9500")

create_btn("4", 3, 0, font=num_font)
create_btn("5", 3, 1, font=num_font)
create_btn("6", 3, 2, font=num_font)
create_btn("-", 3, 3, bg="#FF9500")

create_btn("1", 4, 0, font=num_font)
create_btn("2", 4, 1, font=num_font)
create_btn("3", 4, 2, font=num_font)
create_btn("+", 4, 3, bg="#FF9500")

create_btn("0", 5, 0, colspan=2, font=num_font)  # wide zero
create_btn(".", 5, 2, font=num_font)
create_btn("=", 5, 3, cmd=equalpress, bg="#FF9500")

# Responsive Grid
for i in range(6):
    root.grid_rowconfigure(i, weight=1)
for j in range(4):
    root.grid_columnconfigure(j, weight=1)

root.mainloop()

